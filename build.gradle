import static org.gradle.api.JavaVersion.VERSION_17
import static org.gradle.jvm.toolchain.JavaLanguageVersion.of

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'net.corda.cordapp.cordapp-configuration'
    id 'org.jetbrains.kotlin.plugin.jpa'
    id 'java'
    id 'maven-publish'
    id 'net.corda.gradle.plugin'
}

allprojects {
    group 'com.r3.developers.cordapptemplate'
    version '1.0-SNAPSHOT'

    // Configure Corda runtime gradle plugin
    cordaRuntimeGradlePlugin {
        notaryVersion = cordaNotaryPluginsVersion
        notaryCpiName = "NotaryServer"
        corDappCpiName = "MyCorDapp"
        cpiUploadTimeout = "30000"
        vnodeRegistrationTimeout = "60000"
        cordaProcessorTimeout = "300000"
        workflowsModuleName = "workflows"
        cordaClusterURL = "https://localhost:8888"
        cordaRestUser = "admin"
        cordaRestPasswd ="admin"
        composeFilePath = "config/combined-worker-compose.yaml"
        networkConfigFile = "config/static-network-config.json"
        r3RootCertFile = "config/r3-ca-key.pem"
        skipTestsDuringBuildCpis = "false"
        cordaRuntimePluginWorkspaceDir = "workspace"
        cordaBinDir = "${System.getProperty("user.home")}/.corda/corda5"
        cordaCliBinDir = "${System.getProperty("user.home")}/.corda/cli"

        // Only need to supply these if you want to use an unpublished version
        artifactoryUsername = findProperty('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
        artifactoryPassword = findProperty('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
    }

    java {
        toolchain {
            languageVersion = of(VERSION_17.majorVersion.toInteger())
        }
        withSourcesJar()
    }

    // Declare the set of Java compiler options we need to build a CorDapp.
    tasks.withType(JavaCompile) {
        // -parameters - Needed for reflection and serialization to work correctly.
        options.compilerArgs += [
                "-parameters"
        ]
    }

    repositories {
        // All dependencies are held in Maven Central
        mavenLocal()
        mavenCentral()

        // R3 Internal repositories for dev
        // Repository provides Corda 5 binaries that implement Corda-API.
        // These will be made publicly available.
        // Final location to be decided.
        // Repository subject to change
        maven {
            url = "$artifactoryContextUrl/corda-os-maven"
            authentication {
                basic(BasicAuthentication)
            }
            credentials {
                username = findProperty('cordaArtifactoryUsername') ?: System.getenv('CORDA_ARTIFACTORY_USERNAME')
                password = findProperty('cordaArtifactoryPassword') ?: System.getenv('CORDA_ARTIFACTORY_PASSWORD')
            }
        }
    }

    tasks.withType(Test).configureEach {
        useJUnitPlatform()
    }

}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId "corda-dev-template-java-sample"
            groupId project.group
            artifact jar
        }
   }
}

